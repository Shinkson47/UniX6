//======================================================================
// Run me to generate documentation for desktop.
//======================================================================
task generateDocumentation(){}
//======================================================================
apply plugin: "org.jetbrains.dokka"
generateDocumentation.dependsOn dokkaGfm
generateDocumentation.dependsOn dokkaHtml
dokkaGfm {
    outputDirectory.set(file("${project.rootDir}/docs/markdown/desktop"))
}
dokkaHtml {
    outputDirectory.set(file("${project.rootDir}/docs/HTML/desktop"))
}
//======================================================================








sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "com.shinkson47.SplashX6.desktop.SplashX6"
project.ext.assetsDir = new File("../core/assets")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

jar {
    baseName 'Splash X6'
}

dist.dependsOn classes

eclipse.project.name = appName + "-desktop"
